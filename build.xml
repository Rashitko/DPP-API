<?xml version="1.0" encoding="UTF-8" ?>
<project name="dpp" default="all" basedir=".">

    <!-- source directories -->
    <property name="src.dir" value="${basedir}/src"/>
    <property name="parser.src.dir" value="${src.dir}/DPPParser"/>
    <property name="example.src.dir" value="${src.dir}/examples"/>
    <property name="tests.src.dir" value="${src.dir}/tests"/>

    <!-- build directories -->
    <property name="build.dir" value="${basedir}/build"/>
    <property name="classes.dir" location="${build.dir}/classes"/>
    <property name="tests.classes.dir" location="${build.dir}/test-classes"/>
    <property name="example.classes.dir" location="${build.dir}/example-classes"/>

    <property name="test.reports.dir" location="${build.dir}/test-reports"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="doc.dir" value="${basedir}/doc"/>
    <property name="lib.dir" value="${basedir}/libs"/>

    <!-- library name and version -->
    <property name="libName" value="DPPParser"/>
    <property name="libVersion" value="1.0"/>

    <available file="${dist.dir}/${libName}-${libVersion}.jar" property="isLibAvailable"/>

    <!-- Define the project classpath -->
    <path id="compile.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <path id="javadoc.classpath">
        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <target name="clean" description="Clean build">
        <delete dir="${build.dir}"/>
        <delete dir="${dist.dir}"/>
        <delete dir="${doc.dir}"/>
    </target>

    <target name="init" description="Create directories">
        <mkdir dir="${build.dir}"/>
        <mkdir dir="${classes.dir}"/>
        <mkdir dir="${tests.classes.dir}"/>
        <mkdir dir="${example.classes.dir}"/>
        <mkdir dir="${dist.dir}"/>
        <mkdir dir="${doc.dir}"/>
    </target>


    <target name="compile" depends="init" description="Compile the library">
        <javac includeantruntime="false" srcdir="${parser.src.dir}"
               destdir="${classes.dir}">
            <classpath refid="compile.classpath"/>
        </javac>
    </target>

    <target name="jar" depends="compile" description="Packing the library into single JAR file">
        <jar jarfile="${dist.dir}/${libName}-${libVersion}.jar"
             basedir="${classes.dir}"/>

    </target>

    <target name="compile-example"
            description="compile the example or write the error message if the JAR does not exist"
            depends="init, compile-example-jar-exist, compile-example-no-jar">
    </target>

    <target name="compile-example-jar-exist" description="compile the examples"
            if="isLibAvailable">

        <javac includeantruntime="false" srcdir="${example.src.dir}"
               destdir="${example.classes.dir}">
            <classpath>
                <pathelement path="${dist.dir}/${libName}-${libVersion}.jar"/>
            </classpath>
        </javac>

    </target>

    <target name="compile-example-no-jar" description="copy file based on false condition"
            unless="isLibAvailable">
        <echo>The ${libName}-${libVersion}.jar is not in the ${dist.dir} directory, have you created the
            library using the command ant jar ?
        </echo>
    </target>

    <target name="run-example" depends="compile-example">
        <java classname="examples.Main">
            <classpath>
                <pathelement path="${example.classes.dir}"/>
                <pathelement path="${dist.dir}/${libName}-${libVersion}.jar"/>
            </classpath>
            <arg line="-short --uberlongoption 20"/>
        </java>
    </target>

    <target name="compile-tests">
        <javac includeantruntime="false" srcdir="${tests.src.dir}"
               destdir="${tests.classes.dir}">
        </javac>
    </target>


    <target name="build" depends="run-tests, jar, javadoc"
            description="run the tests, create jar library and creates javadoc documentation">

    </target>

    <target name="javadoc">
        <javadoc destdir="${doc.dir}" windowtitle="DPPParser">
            <fileset dir="${src.dir}" defaultexcludes="yes">
                <include name="DPPParser/**"/>
            </fileset>
            <classpath refid="javadoc.classpath"/>
            <bottom>
                <![CDATA[<b>DPPParser, Michal Raska & Jakub Hava, 2015<b>]]>
            </bottom>
        </javadoc>
    </target>


    <target name="run-tests" depends="compile-tests">

    </target>

    <target name="all" depends="jar, run-tests">

    </target>
</project>